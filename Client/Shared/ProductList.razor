@inject IProductService ProductService
@implements IDisposable
@inject ICategoryService CategoryService

@if(ProductService.Products == null || ProductService.Products.Count == 0){
    <span>Loading Products...</span>
}
else
{
    <section class="navigate-section">
        <div class="navigate">
            <div class="d-flex flex-column">
                <div class="d-flex align-items-center flex-wrap">
                    <a href="#!" class="fs-4 fw-semibold c-2 me-2 text-decoration-none">Anasayfa</a>
                    <img width="40" src="assets/images/icons/right-arrow.png" alt="">
                    <a href="#!" class="fs-4 fw-semibold c-2 mx-2 text-decoration-none">Ürünler</a>
                </div>
                <div class="fs-4 c-2 mt-2">0R1-25W Alüminyum Direnç</div>
            </div>
            <div class="d-flex align-items-center">
                <span class="c-2 d-flex align-items-center me-2">
                    <i class="fa-solid fa-share-nodes fs-4 me-2"></i>
                    <font class="fs-4 fw-semibold">Paylaş:</font>
                </span>
                <span class="d-flex align-items-center">
                    <a href="#!" class="me-2 c-2"><i class="fa-solid fa-envelope fs-4 pt-1"></i></a>
                    <a href="#!" class="me-2"><img height="31" src="assets/images/icons/wp-ico.png" alt=""></a>
                    <a href="#!"><img height="29" src="assets/images/icons/telegram-ico.png" alt=""></a>
                </span>
            </div>
        </div>
    </section>
<ul class="list-unstyled">
        @foreach (var item in ProductService.Products)
        {
        <li class="media my-3">
            <div class="media-img-wrapper mr-2">
                    <a href="/Product/@item.ID">
                    <img class="media-img" src="@item.ImageURL" alt="@item.Title"/>
                </a>
            </div>
            <div class="media-body">
                <a href="/Product/@item.ID">
                    <h4 class="mb-0">@item.Title</h4>
                </a>
                <p>@item.Description</p>
                <h5 class="price">
                        @GetPriceText(item)
                </h5>
            </div>
        </li>
    }
</ul>
    for(var i=1; i <= ProductService.PageCount; i++)
    {
        <a class="btn 
        @(i==ProductService.CurrentPage ? "btn-info":"btn-outline-info") page-selection" 
            href="/search/@ProductService.LastSearchText/@i">@i</a>
    }

}





@code {
    protected override void OnInitialized()
    {
        ProductService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.ProductsChanged += StateHasChanged;
    }

    private string GetPriceText(Product item)
    {
        var variants = item.Variants;
        if(variants.Count == 0)
        {
            return string.Empty;
        }
        else if(variants.Count == 1)
        {
            return $"${variants[0].Price}";
        }
        decimal minPrice = variants.Min(v => v.Price);
        return $"Starting at ${minPrice}";
    }
}
