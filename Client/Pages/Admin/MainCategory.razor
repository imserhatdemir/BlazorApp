@page "/admin/sub-categories-list"
@inject IMainCategoryService CategoryService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable


<h3>Sub Categories</h3>

<div class="header">
    <div class="col">Name</div>
    <div class="col">Url</div>
    <div class="col">#</div>
</div>


@foreach (var category in CategoryService.AdminMainCategories)
{
    @if (category.Editing)
    {
        <EditForm Model="editingCategory" OnSubmit="UpdateCategory">
            <div class="row">
                <div class="col">
                    <InputText @bind-Value="editingCategory.Name" class="form-control"></InputText>
                </div>
                <div class="col">
                    <InputText @bind-Value="editingCategory.Url" class="form-control"></InputText>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">
                        <i class="oi oi-cloud-upload"></i>
                    </button>
                    <button class="btn btn-primary" @onclick="CancelEditing">
                        <i class="oi oi-circle-x"></i>
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div class="row">
            <div class="col">
                @category.Name
            </div>
            <div class="col">
                @category.Url
            </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="(()=>EditCategory(category))">
                    <i class="oi oi-pencil"></i>
                </button>
                <button class="btn btn-primary" @onclick="(()=>DeleteCategory(category.Id))">
                    <i class="oi oi-trash"></i>
                </button>
            </div>
        </div>
    }
}
<button class="btn btn-primary" @onclick="CreateNewCategory">
    <i class="oi oi-plus"></i> Add new sub category
</button>





@code {

    BlazorApp.Shared.MainCategory editingCategory = null;
    BlazorApp.Shared.MainCategory det = new BlazorApp.Shared.MainCategory();

    protected override async Task OnInitializedAsync()
    {

        await CategoryService.GetAdminMainCategories();
        CategoryService.OnChange += StateHasChanged;
    }


    public void Dispose()
    {
        CategoryService.OnChange -= StateHasChanged;
    }

    private void CreateNewCategory()
    {
        editingCategory = CategoryService.CreateNewMainCategory();
    }

    private void EditCategory(BlazorApp.Shared.MainCategory category)
    {
        category.Editing = true;

        editingCategory = category;
    }

    private async Task UpdateCategory()
    {
        if (editingCategory.IsNew)
            await CategoryService.AddMainCategories(editingCategory);
        else
            await CategoryService.UpdateCategories(editingCategory);

        editingCategory = new BlazorApp.Shared.MainCategory();
    }

    private async Task CancelEditing()
    {
        editingCategory = new BlazorApp.Shared.MainCategory();
        await CategoryService.GetAdminMainCategories();
    }

    private async Task DeleteCategory(int id)
    {
        await CategoryService.DeleteMainCategories(id);
    }



}
