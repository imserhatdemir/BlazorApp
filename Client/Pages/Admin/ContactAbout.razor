@page "/admin/iletisim-hakkinda"
@inject IContactAboutService ContactAboutService
@inject NavigationManager NavigationManager
@inject SweetAlertService swal
@attribute [Authorize(Roles = "Admin")]
<section class="mt-4">
    <div align="center">
        <button class="btn btn-primary" @onclick="CreateSlider">
            <i class="oi oi-plus"></i>Add a new ship
        </button>
        <h3>SlideList</h3>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Başlık</th>
                    <th scope="col">Slayt Sırası</th>
                    <th scope="col">Görsel</th>
                    <th scope="col">İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @if (ContactAboutService.AdminContactAbouts.Count == 0)
                {
                    <tr>
                        <a class="btn btn-danger">Slider Bulunamamaktadır</a>
                    </tr>
                }
                else
                {
                    @foreach (var item in ContactAboutService.AdminContactAbouts)
                    {
                        <tr>
                            <th scope="row">@item.Id</th>
                            <td>@item.Address</td>
                            <td>@item.Mail</td>
                            <td>@item.Location</td>
                            <td>
                                <a href="/admin/slider-settings/@item.Id" class="btn btn-success">Güncelle</a>
                                <button class="btn btn-primary" @onclick="(()=>DeleteMail(item.Id))">
                                    <i class="oi oi-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</section>


@code {

    protected override async Task OnInitializedAsync() => await ContactAboutService.GetAdminContactAbout();

    void CreateSlider()
    {
        NavigationManager.NavigateTo("/admin/iletisim-hakkinda");
    }

    private async Task DeleteMail(int id)
    {
        await ContactAboutService.DeleteContAbout(id);
        var result = await swal.FireAsync(new SweetAlertOptions
            {
                Title = "Silme işlemi tamamlandı",
                Icon = SweetAlertIcon.Success
            });
        var confirm = !string.IsNullOrEmpty(result.Value);
        NavigationManager.NavigateTo($"/admin/iletisim-hakkinda");
    }
}
