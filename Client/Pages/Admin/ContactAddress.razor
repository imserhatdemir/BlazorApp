@page "/admin/iletisim-adresler"
@inject IContactAddressService KvkkService
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable

<section class="mt-4">
    <div class="custom-c-wrapper">
        <h3>İletişim Sayfası - Hakkında</h3>
        <button class="btn btn-primary" @onclick="CreateNewBrand">
            <i class="oi oi-plus"></i> Yeni Metin Ekle
        </button>
        <div class="header">
            <div class="col">Başlık</div>
            <div class="col">İletişim No</div>
            <div class="col">Mail</div>
            <div class="col">Adres</div>
            <div class="col">Lokasyon</div>
            <div class="col">Visible</div>
            <div class="col"></div>
        </div>


        @foreach (var category in KvkkService.AdminContactAddresses)
        {
            @if (category.Editing)
            {
                <EditForm Model="editBrand" OnSubmit="UpdateBrand">
                    <div class="row">
                        <div class="col">
                            <InputText @bind-Value="editBrand.Title" class="form-control"></InputText>
                        </div>
                        <div class="col">
                            <InputText @bind-Value="editBrand.Number" class="form-control"></InputText>
                        </div>
                        <div class="col">
                            <InputText @bind-Value="editBrand.Mail" class="form-control"></InputText>
                        </div>
                        <div class="col">
                            <InputText @bind-Value="editBrand.Address" class="form-control"></InputText>
                        </div>
                        <div class="col">
                            <InputText @bind-Value="editBrand.Location" class="form-control"></InputText>
                        </div>
                        <div class="col col-visible">
                            <InputCheckbox @bind-Value="editBrand.Visible" style="transform:scale(1.5,1.5);"></InputCheckbox>
                        </div>
                        <div class="col">
                            <button type="submit" class="btn btn-primary">
                                <i class="oi oi-cloud-upload"></i>
                            </button>
                            <button class="btn btn-primary" @onclick="CancelEditing">
                                <i class="oi oi-circle-x"></i>
                            </button>
                        </div>
                    </div>
                </EditForm>
            }
            else
            {
                <div class="row">
                    <div class="col">
                        @category.Title
                    </div>
                    <div class="col">
                        @category.Number
                    </div>
                    <div class="col">
                        @category.Mail
                    </div>
                    <div class="col">
                        @category.Address
                    </div>
                    <div class="col">
                        @category.Location
                    </div>
                    <div class="col col-visible">
                        <span>@(category.Visible ? "✓" : "")</span>
                    </div>
                    <div class="col">
                        <button class="btn btn-primary" @onclick="(()=>EditBrand(category))">
                            <i class="oi oi-pencil"></i>
                        </button>
                        <button class="btn btn-primary" @onclick="(()=>DeleteBrand(category.Id))">
                            <i class="oi oi-trash"></i>
                        </button>
                    </div>
                </div>
            }
        }



    </div>
</section>







@code {
    BlazorApp.Shared.ContactAddress editBrand = null;

    protected override async Task OnInitializedAsync()
    {
        await KvkkService.GetAdminContactAddress();
        KvkkService.OnChange += StateHasChanged;
    }


    public void Dispose()
    {
        KvkkService.OnChange -= StateHasChanged;
    }

    private void CreateNewBrand()
    {
        editBrand = KvkkService.CreateAddress();
    }

    private void EditBrand(BlazorApp.Shared.ContactAddress category)
    {
        category.Editing = true;

        editBrand = category;
    }

    private async Task UpdateBrand()
    {
        if (editBrand.IsNew)
            await KvkkService.AddAddress(editBrand);
        else
            await KvkkService.UpdateAddress(editBrand);

        editBrand = new BlazorApp.Shared.ContactAddress();
    }

    private async Task CancelEditing()
    {
        editBrand = new BlazorApp.Shared.ContactAddress();
        await KvkkService.GetAdminContactAddress();
    }


    private async Task DeleteBrand(int id)
    {
        await KvkkService.DeleteAddress(id);
    }



}
