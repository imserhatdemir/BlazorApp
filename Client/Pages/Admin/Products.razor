@page "/admin/products"
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles ="Admin")]

<section class="mt-4">
        <div class="custom-c-wrapper d-flex flex-column">
@if(ProductService.AdminProducts == null)
{
    <h3>Products</h3>
<span>Loading Products</span>
}
else
{
    <section class="mt-4">
    <h3>Products</h3>
    <button class="btn btn-primary float-end" @onclick="CreateProduct">
        <i class="oi oi-plus"></i>Add a new product
    </button>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th></th>
                <th>Product</th>
                <th>Variant</th>
                <th>Price</th>
                <th>Visible</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="ProductService.AdminProducts" Context="product">
                <tr>
                    <td>@product.Title</td>
                    <td>
                        @foreach(var variant in product.Variants)
                        {
                            <span>@variant.ProductType.Name</span><br/>
                        }
                    </td>
                    <td>
                        @foreach (var variant in product.Variants)
                        {
                            <span>@variant.Price</span>

                            <br />
                        }
                    </td>
                    <td>@(product.Visible ? "✔️" : "")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(()=>EditProduct(product.ID))">
                            <i class="oi oi-pencil"></i>
                        </button>
                    </td>
                </tr>
            </Virtualize>
        </tbody>
    </table>


    </section>
}
  
</div>
</section>



@code {
    protected override async Task OnInitializedAsync() => await ProductService.GetAdminProducts();

    void EditProduct(int productId)
    {
        NavigationManager.NavigateTo($"admin/product/{productId}");
    }

    void CreateProduct()
    {
        NavigationManager.NavigateTo("admin/product/");
    }
}
