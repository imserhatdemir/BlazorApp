@page "/admin/bank-accounts"
@inject IBankAccountService BankAccountService
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable

<section class="mt-4">
        <div class="custom-c-wrapper d-flex flex-column">
<h3>Categories</h3>

<div class="header">
    <div class="col">Name</div>
    <div class="col">Url</div>
    <div class="col">Visible</div>
    <div class="col">Image</div>
    <div class="col"></div>
</div>


@foreach (var category in BankAccountService.AdminBankAccounts)
{
    if (category.Editing) 
    {
        <EditForm Model="editingBank" OnSubmit="UpdateCategory">
            <div class="row">
                <div class="col">
                    <InputText @bind-Value="editingBank.Address" class="form-control"></InputText>
                </div>
                <div class="col">
                    <InputText @bind-Value="editingBank.Iban" class="form-control"></InputText>
                </div>
                <div class="col col-visible">
                    <InputCheckbox @bind-Value="editingBank.Visible" style="transform:scale(1.5,1.5);"></InputCheckbox>
                </div>
                <div class="col">
                    <InputText @bind-Value="editingBank.ImageUrl" class="form-control"></InputText>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">
                        <i class="oi oi-cloud-upload"></i>
                    </button>
                    <button class="btn btn-primary" @onclick="CancelEditing">
                        <i class="oi oi-circle-x"></i>
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div class="row">
            <div class="col">
                @category.Address
            </div>
            <div class="col">
               TR @category.Iban
            </div>
            <div class="col col-visible">
                <span>@(category.Visible ? "✓" : "")</span>
            </div>
            <div class="col">
                <img src="@category.ImageUrl" width="120px" height="85px"/>
            </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="(()=>EditCategory(category))">
                    <i class="oi oi-pencil"></i>
                </button>
                <button class="btn btn-primary" @onclick="(()=>DeleteCategory(category.Id))">
                    <i class="oi oi-trash"></i>
                </button>
            </div>
        </div>
    }
}
<button class="btn btn-primary" @onclick="CreateNewCategory">
    <i class="oi oi-plus"></i> Add new category
</button>

</div>
</section>

@code {
    BlazorApp.Shared.BankAccount editingBank = null;

    protected override async Task OnInitializedAsync()
    {
        await BankAccountService.GetAdminBankAccount();
        BankAccountService.OnChange += StateHasChanged;
    }


    public void Dispose()
    {
        BankAccountService.OnChange -= StateHasChanged;
    }

    private void CreateNewCategory()
    {
        editingBank = BankAccountService.CreateNewBank();
    }

    private void EditCategory(BlazorApp.Shared.BankAccount category)
    {
        category.Editing = true;

        editingBank = category;
    }

    private async Task UpdateCategory()
    {
        if (editingBank.IsNew)
            await BankAccountService.AddBank(editingBank);
        else
            await BankAccountService.UpdateBank(editingBank);

        editingBank = new BlazorApp.Shared.BankAccount();
    }

    private async Task CancelEditing()
    {
        editingBank = new BlazorApp.Shared.BankAccount();
        await BankAccountService.GetAdminBankAccount();
    }

    private async Task DeleteCategory(int id)
    {
        await BankAccountService.DeleteBank(id);
    }


}
