@page "/admin/product-types"
@inject IProductTypeService ProductTypeService
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable


<h3>ProductTypes</h3>

@foreach (var item in ProductTypeService.ProductTypes)
{
    @if(item.Editing)
    {
       <EditForm Model="editingProductType" OnSubmit="UpdateProductType">
           <div class="row">
               <div class="col">
                   <InputText @bind-Value="editingProductType.Name" class="form-control"></InputText>
               </div>
               <div class="col">
                   <button type="submit" class="btn btn-primary">
                       <i class="oi oi-cloud-upload"></i>
                   </button>
               </div>
           </div>
       </EditForm>
    
    }
    else
    {
        <div class="row">
            <div class="col">
                @item.Name
            </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="@(()=>EditProductType(item))">
                    <i class="oi oi-pencil"></i>
                </button>
            </div>
        </div>
    }

   
}
<button class="btn btn-primary" @onclick="CreateNewProductType">
    <i class="oi oi-plus"></i> Add New Product Type
</button>



@code {
    ProductType editingProductType = null;

    protected override async Task OnInitializedAsync()
    {
        await ProductTypeService.GetProductTypes();
        ProductTypeService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        ProductTypeService.OnChange -= StateHasChanged;
    }


    private void EditProductType(ProductType product)
    {
        product.Editing = true;
        editingProductType = product;
    }

    private void CreateNewProductType()
    {
        editingProductType = ProductTypeService.CreateNewProductType();
    }

    private async Task UpdateProductType()
    {
        if (editingProductType.IsNew)
            await ProductTypeService.AddProductTypes(editingProductType);
        else
            await ProductTypeService.UpdateProductTypes(editingProductType);
        editingProductType = new ProductType();
    }


}
